#!/bin/bash
#
# Pratham Kwatra
# 9/10/2020 [DATE/MONTH/YEAR]
#
# Platform: Linux tux5 5.4.0-48-generic #52-Ubuntu SMP Thu Sep 10 10:58:49 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
#
# EDITOR: tabs=3, cols=120 (checked with echo $COLUMNS)
#
# a1-top

debugOn="n"

read -p "Do you want to see the script as it executes? (y/[n]) => " \
   debugOn
	if [ "$debugOn" == "y" -o "$debugOn" == "Y" ] ; then
		   set -x      # very useful switch to the set command
	fi

#this function starts the creation of the JSON file
dir2json(){

#Array comparision function
checkInArray(){
	localArray=$1
	givenValue=$2
	if [[ "${localArray[@]}" =~ "${givenValue}" ]]; then
		    return 0 
		else
			return 2
	fi
	}	


#files in this globally defined array are ignored by the for loop below
requiredArray=()

ls README 2>/dev/null </dev/null
#using awk to read the README file and then put those files in a required array.
if [ $? -eq 0 ]
	then
		index=$(awk -F":" '$1=="index" {print $NF}' README)
		required=$(awk -F":" '$1=="required" {for (i=2; i<=NF; i++) print $i}' README)
		required=$(echo $required)
		while [ "$required" != "${required#* }" ]; do requiredArray+=" ${required#* }"
												required=${required% *}; done
		requiredArray+=" $required"
		requiredArray+=" $index"
		#echo $index
		#echo $required
		#echo $requiredArray
	else
		index=""
		required=""
	fi

#globaly defined arrays
files=()
directories=()
otherFiles=()
otherDirectory=()

#for loop to create arrays for all files present in that directory
for thing in $( ls -A )
	do 
		if checkInArray "$requiredArray" "$thing"
			then 
				if [ -d "$thing" ] 
					then directories+=" $thing"
				else 
					if [ "$thing" != "$index" ]; then
						files+=" $thing"; fi
				fi
		elif [ -f "$thing" ]
			then 
			if [ "dir.json" != "$thing" ]
				then otherFiles+=" $thing"
			fi
		else
			otherDirectory+=" $thing"
		fi
	done

#Converts all arrays into strings and concatenate them together
stringArray(){
	array=${!1}
	lastEle=$2
	STRING=''
	for n in ${array[@]}; do
		if [ "$n" != "$lastEle" ]; then
		STRING+="\"$n\", "
		else
		STRING+="\"$n\""
   fi
	done
	echo $STRING
	}

#Converting all the arrays into strings
stringFiles=$( stringArray "files" "${files##* }")
stringDir=$( stringArray "directories" "${directories##* }")
stringOD=$( stringArray "otherDirectory" "${otherDirectory##* }")
stringOF=$( stringArray "otherFiles" "${otherFiles##* }")

#echo creates the json format
echo "{
  \"index\" : \"$index\",
    \"required\" : {
      \"files\": [$stringFiles],
      \"directories\" : [$stringDir]
   },
  \"other\" : {
    \"files\": [$stringOF], 
    \"directories\" : [$stringOD]
    }
}" > dir.json
} 
#dir2json functions ends here

createJSON() {
	dir2json	  
}

CDdir(){
	for dir in $( ls -A )
		do
		if [ -d "$dir" ] ;
			then main $dir ; fi
		done
	cd ..
	}
main() {
	if [ $# -eq 0 ]
		then
			createJSON
			CDdir *
		else
			cd $1
			createJSON
			CDdir $1
			fi }

#main ~kschmidt/public_html/Files/Dir2
main $1
