#Pratham Kwatra 
#For CS265 
#Assignment 1 

This the README file for Assignment 1.

Due to the method used for completing this assignment, it is a little long. Thus, I will be
explaining some functions and loops, I used to complete this assignment.

The file is divided in 2 portions: 
	1. Creating a JSON 
	2. Recursively going through all the Directories.

	Lets start with number 2: 
	I have used 2 functions to completely go through the dir tree. my main function and CDdir. 
	To test this function, I have submitted the a1-draft bash file. That file only has a basic 
	createJSON function which tells whether a README is present or not.  Next, the CDdir function 
	uses a for loop to go over the directories. 
	This function is called from the main function where the first thing is to cd into the 
	given directory, create a JSON file and call the CDdir function. Now, in the CDdir, 
	the for loop works to go through all the files in that directory and if that file is a 
	directory then it will call the main function with the directoryname as an argument for the 
	main function. 
	There the main functioin will again cd into that directory, create a JSON and call CDdir in 
	that directory this time. This goes on until all the files have through the for loop in all directories. 

		This procedure could be simplified with a proper ls command that only goes over directories. 

	Now for number 1: 
	I have used multiple functions, loops and global variables for creating a JSON.
	It could be simplified by a huge margin but I lack proficiency in bash, thus it is very long. It
	was meant to be called as script from a1-top, but i could not set the ENVIRONMENT Variables
	corretly so I just copied that chunk of code and pasted it inside a huge dir2json{..} function.
	Which when called does three main things: 
		1. Searches and Parses for the README file with awk and ls. If none is found then assigns default 
			value to required and index 
		2. Uses ls to create arrays for the four given categories in the JSON file 
		3. A array to string function which converts all the arrays into formatted JSON string 

	Last, I simply use echo to combine all of these strings in proper indentations.  
	While the main things are the focus of this function some side functions are also used to: 
		1. Treat the arrays as sets and take out any element which
			was present in the README file of the directories.  
		2. It has many if statements to sort the files properly into their respective categories 
			which may get tricky to understand 
		3. Many of the array syntax is old school since tux was not able to manage some of the newer syntax such
			as parsing an array as an argument is not possbile in a function so you have to call the array
			seperately using {!name}.  
		4. The awk part focuses on index and required files seperately and in the end since I could figure out 
			whether there will be one or multiple index files I put a sorter using if statements on all 
			the files mentioned in README 
			That would be it. For easier debugging I have submitted the second function in a file called 
			dir2json and first function in file a1-draft.  
			They are both not commented but the a1-top file has some basic comments which
			try to explain what is happening in that loop or function.  They seem to be working for most
			cases I think, I tested them out but may have missed a case which will lead to an infinite
			loop. They do not seem to searching for .hidden directories.  Thank you for your attention and Have a good day!
